generator client {
  provider = "prisma-client-js"
  previewFeatures = ["aggregateApi"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Archive {
  @@map(name: "archives")
  comment     String?
  created_at  DateTime?
  created_by  Int
  customer_id Int?
  date        DateTime
  id          Int       @default(autoincrement()) @id
  location_id Int
  product_id  Int
  quantity    Int
  supplier_id Int?
  updated_at  DateTime?
}

model Customer {
  @@map(name: "customers")
  created_at  DateTime?
  id          Int              @default(autoincrement()) @id
  khmer       String?          @unique
  name        String           @unique
  status      customers_status @default(active)
  updated_at  DateTime?
  inventories Inventory[]
}

model Inventory {
  @@map(name: "inventories")
  comment     String?
  created_at  DateTime? @default(now())
  created_by  Int
  customer_id Int?
  date        DateTime
  deleted_at  DateTime?
  id          Int       @default(autoincrement()) @id
  location_id Int
  product_id  Int
  quantity    Int
  supplier_id Int?
  updated_at  DateTime? @updatedAt
  user        User      @relation(fields: [created_by], references: [id])
  customer    Customer? @relation(fields: [customer_id], references: [id])
  location    Location  @relation(fields: [location_id], references: [id])
  product     Product   @relation(fields: [product_id], references: [id])
  supplier    Supplier? @relation(fields: [supplier_id], references: [id])

  @@index([created_by], name: "inventories_created_by_foreign")
  @@index([customer_id], name: "inventories_customer_id_foreign")
  @@index([location_id], name: "inventories_location_id_foreign")
  @@index([product_id], name: "inventories_product_id_foreign")
  @@index([supplier_id], name: "inventories_supplier_id_foreign")
}

model Location {
  @@map(name: "locations")
  created_at  DateTime?
  id          Int              @default(autoincrement()) @id
  name        String           @unique
  status      locations_status @default(active)
  updated_at  DateTime?
  inventories Inventory[]
}

model migrations {
  batch     Int
  id        Int    @default(autoincrement()) @id
  migration String
}

model Product {
  @@map(name: "products")
  created_at        DateTime?
  id                Int             @default(autoincrement()) @id
  khmer             String          @unique
  low_stock_warning Int             @default(dbgenerated())
  name              String          @unique
  status            products_status @default(active)
  updated_at        DateTime?
  inventories       Inventory[]
}

model Supplier {
  @@map(name: "suppliers")
  created_at  DateTime?
  id          Int              @default(autoincrement()) @id
  khmer       String?          @unique
  name        String           @unique
  status      suppliers_status @default(active)
  updated_at  DateTime?
  inventories Inventory[]
}

model User {
  @@map(name: "users")
  api_token     String?     @unique
  created_at    DateTime?
  email         String      @unique
  id            Int         @default(autoincrement()) @id
  name          String
  password      String
  registered_at DateTime?
  updated_at    DateTime?
  inventories   Inventory[]
}

enum customers_status {
  active
  inactive
}

enum locations_status {
  active
  inactive
}

enum products_status {
  active
  inactive
}

enum suppliers_status {
  active
  inactive
}
